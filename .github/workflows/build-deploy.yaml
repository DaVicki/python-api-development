name: Build and Deploy code

on: [push, pull_request]
jobs:
  job1:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{ secrets.DATABASE_HOSTNAME }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_SCHEMA: ${{ secrets.DATABASE_SCHEMA }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}
    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: install python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: Install Docker
        uses: docker/setup-docker-action@v4
      - name: Install Docker compose
        uses: docker/setup-compose-action@v1
      - name: install dependencies
        run: pip install -r requirements.txt
      - name: Run Docker compose
        run: docker compose up -d
        env:
          DATABASE_HOSTNAME: ${{ secrets.DATABASE_HOSTNAME }}
          DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_SCHEMA: ${{ secrets.DATABASE_SCHEMA }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          ALGORITHM: ${{ secrets.ALGORITHM }}
          ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}
      - name: echo env
        run: echo $DATABASE_HOSTNAME
      - name: run tests
        run: pytest -v
      